{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Fairytale\\\\myreact\\\\src\\\\html\\\\Join.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction JoinPage() {\n  _s();\n  //useState() - 값이 변화되는 것을 저장\n  const [id, setId] = useState(''); //처음 기본값 비우기\n  const [pw, setPw] = useState(''); //처음 기본값 비우기\n  const [pw2, setPw2] = useState(''); //처음 기본값 비우기\n\n  //state값이 변화되는 함수 - input에 쓴 값으로 바뀜\n  const onIdChange = e => {\n    //e: 이벤트 객체\n    setId(e.target.value); //이벤트를 받는 타겟의 value값으로 변경\n    console.log(e.target.value);\n  };\n  const onPwChange = e => {\n    //e: 이벤트 객체\n    setPw(e.target.value); //이벤트를 받는 타겟의 value값으로 변경\n    console.log(e.target.value);\n  };\n  const onPwChange2 = e => {\n    //e: 이벤트 객체\n    setPw2(e.target.value); //이벤트를 받는 타겟의 value값으로 변경\n\n    if (pw === e.target.value) {\n      console.log(2);\n    }\n  };\n\n  //state값을 초기화 시키는 함수 - 버튼에 적용\n  const onDataReset = () => {\n    // setText('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\uC544\\uC774\\uB514:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onIdChange,\n        size: \"12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\uBE44\\uBC00\\uBC88\\uD638:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: onPwChange,\n        size: \"12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\uBE44\\uBC00\\uBC88\\uD638\\uD655\\uC778:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: onPwChange2,\n        size: \"12\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        axios.post(\"/page/signup/\", {\n          username: id,\n          password: pw\n        }).then(function (response) {\n          console.log(response.data['token']);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      },\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(JoinPage, \"psM8y7TibdqQRXNWYcBrcrwTssg=\");\n_c = JoinPage;\nexport default JoinPage;\nvar _c;\n$RefreshReg$(_c, \"JoinPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","JoinPage","_s","id","setId","pw","setPw","pw2","setPw2","onIdChange","e","target","value","console","log","onPwChange","onPwChange2","onDataReset","children","type","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","post","username","password","then","response","data","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Fairytale/myreact/src/html/Join.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction JoinPage() {\r\n        //useState() - 값이 변화되는 것을 저장\r\n        const [id, setId] = useState(''); //처음 기본값 비우기\r\n        const [pw, setPw] = useState(''); //처음 기본값 비우기\r\n        const [pw2, setPw2] = useState(''); //처음 기본값 비우기\r\n\r\n        //state값이 변화되는 함수 - input에 쓴 값으로 바뀜\r\n        const onIdChange = (e) => {\r\n            //e: 이벤트 객체\r\n            setId(e.target.value); //이벤트를 받는 타겟의 value값으로 변경\r\n            console.log(e.target.value)\r\n        }\r\n\r\n        const onPwChange = (e) => {\r\n            //e: 이벤트 객체\r\n            setPw(e.target.value); //이벤트를 받는 타겟의 value값으로 변경\r\n            console.log(e.target.value)\r\n        }\r\n\r\n        const onPwChange2 = (e) => {\r\n            //e: 이벤트 객체\r\n            setPw2(e.target.value); //이벤트를 받는 타겟의 value값으로 변경\r\n\r\n            if (pw === e.target.value){\r\n                console.log(2);\r\n            }\r\n        }\r\n    \r\n        //state값을 초기화 시키는 함수 - 버튼에 적용\r\n        const onDataReset = () => {\r\n            // setText('');\r\n        }\r\n    \r\n    return (\r\n      <>\r\n            <label>아이디:<input type=\"text\" onChange={ onIdChange } size=\"12\"></input></label>\r\n                <label>비밀번호:<input type=\"password\" onChange={ onPwChange } size=\"12\" ></input></label>\r\n                <label>비밀번호확인:<input type=\"password\" onChange={ onPwChange2 } size=\"12\" ></input></label>\r\n                <button\r\n            onClick={() => {\r\n                axios\r\n                .post(\"/page/signup/\", {\r\n                    username: id,\r\n                    password: pw,\r\n                })\r\n                .then(function (response) {\r\n                    console.log(response.data['token']);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n            }}\r\n            > Login </button>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default JoinPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}